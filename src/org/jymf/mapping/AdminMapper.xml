<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jymf.dao.AdminMapper">
  <resultMap id="BaseResultMap" type="org.jymf.entity.Admin">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="ACCOUNT" jdbcType="VARCHAR" property="account" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="ROLE" jdbcType="INTEGER" property="role" />
    <result column="MAIL" jdbcType="VARCHAR" property="mail" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, ACCOUNT, PASSWORD, NAME, TELEPHONE, ROLE, MAIL, STATUS
  </sql>
  
  <!-- 通过用户名密码进行检索 -->
  <select id="selectByAccountAndPassword" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ADMIN
    where ACCOUNT = #{account,jdbcType=VARCHAR}
      and PASSWORD = #{password,jdbcType=VARCHAR}
      and STATUS = 0
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ADMIN
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ADMIN
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.jymf.entity.Admin">
    insert into ADMIN (
 		<include refid="Base_Column_List" />
      )
    values (#{id,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER},
      #{mail,jdbcType=VARCHAR}, 0
      )
  </insert>
  <insert id="insertSelective" parameterType="org.jymf.entity.Admin">
    insert into ADMIN
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="account != null">
        ACCOUNT,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="role != null">
        ROLE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.jymf.entity.Admin">
    update ADMIN
    <set>
      <if test="account != null">
        ACCOUNT = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        TELEPHONE = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        ROLE = #{role,jdbcType=INTEGER},
      </if>
      <if test="mail != null">
        MAIL = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER}
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jymf.entity.Admin">
    update ADMIN
    set ACCOUNT = #{account,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      TELEPHONE = #{telephone,jdbcType=VARCHAR},
      ROLE = #{role,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 查询所有管理员用户 -->
  <select id="query" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
	from 
	  	( select <include refid="Base_Column_List" /> 
	  		from admin 
	  		where 
				role > #{t.role,jdbcType=INTEGER}
			  	or account = #{t.account,jdbcType=VARCHAR}
	  	) a
  	where 1=1
  		<if test="t.name != null and t.name != ''">
  			and a.name like '%${t.name}%'
  		</if>
  		<if test="t.id != null and t.id != ''">
  			and a.id = #{t.id,jdbcType=INTEGER}
  		</if>
  		AND ACCOUNT!="admin"
  </select>
  
  <!-- 根据account查询当前登录者的相关信息 -->
  <select id="findByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from admin
  	where account = #{account,jdbcType=VARCHAR}
  </select>
  
  <!-- 根据条件查询管理员用户 -->
  <select id="findAdmins" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> 
	from admin 
  	where 1=1
  		<if test="t.name != null and t.name != ''">
  			and a.name like '%${t.name}%'
  		</if>
  		<if test="t.id != null and t.id != ''">
  			and a.id = #{t.id,jdbcType=INTEGER}
  		</if>
  		<if test="t.role != null and t.role != ''">
  			and role = #{t.role,jdbcType=INTEGER}
  		</if>
  		AND ACCOUNT!="admin"
  		AND STATUS = 0
  </select>
  
</mapper>