<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"
	default-lazy-init="true">

	<description>Quartz的本地Batch执行任务配置</description>

	<!-- Quartz本地Schduler -->
	<bean id="localQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<ref bean="batchCountTrigger" />
			</list>
		</property>
		
		<property name="quartzProperties">
		
			<props>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
			</props>
		
		</property>
		<!-- 启动时延期2秒开始任务 -->
		<property name="startupDelay" value="2" />
	</bean>

	<!-- Trigger定义 -->
    <bean id="batchCountTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="batchCountJobDetail" />
        <!-- 每天凌晨 0 点执行一次 -->  
        <property name="cronExpression" value="0 25 10 * * ?" />  
    </bean>
    
	<!-- JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="batchCountJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="batchCountScanner" />
        <property name="targetMethod" value="executeBatchCountJob" />
        <!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
        <property name="concurrent" value="true" />
    </bean>
</beans>
